{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAM,mBAAmB,uCAAzB;;;;IAGa,S,WAAA,S;AAgBX,uBAAgD;AAAA,QAApC,GAAoC,yDAA9B,QAAQ,GAAR,CAAY,gBAAkB;;AAAA;;AAC9C,SAAK,GAAL,GAAW,GAAX;AACD;;;;;;;+BAEmB;AAAA,UAAX,IAAW,yDAAJ,EAAI;;AAClB,aAAO,cAAI,OAAJ,CAAY,IAAZ,EAAkB,KAAK,WAAL,CAAiB,gBAAnC,CAAP;AACD;;;2BACM,G,EAAK,I,EAAM;AAChB,aAAO,kBAAO,0CAAP,EAAmD,GAAnD,EAAwD,EAAxD,EAA4D,4BAAe,KAAK,QAAL,CAAc,IAAd,CAAf,CAA5D,CAAP;AACD;;;6BAE4B;AAAA,UAAtB,IAAsB,yDAAf,EAAe;AAAA,UAAX,IAAW,yDAAJ,EAAI;;AAC3B,aAAO,mBAAY,KAAK,MAAL,CAAY,KAAK,GAAjB,aAAwB,UAAxB,IAAiC,IAAjC,EAAZ,EAAsD,EAAE,UAAU,IAAZ,EAAtD,CAAP;AACD;;;4BAE2B;AAAA,UAAtB,IAAsB,yDAAf,EAAe;AAAA,UAAX,IAAW,yDAAJ,EAAI;;AAC1B,UAAI;AACF,eAAO,iBAAiB,KAAK,MAAL,CAAY,KAAK,GAAjB,aAAwB,UAAxB,IAAiC,IAAjC,EAAjB,EAA2D,EAAE,UAAU,IAAZ,EAA3D,CAAP;AACD,OAFD,CAEE,OAAO,KAAP,EAAc;AACd,eAAO,mBAAQ,MAAR,CAAe,KAAf,CAAP;AACD;AACF;;;kCAEoB;AACnB,aAAO,KAAK,KAAL,wBAAoB,IAApB,CAAyB,UAAC,QAAD;AAAA,eAAc,SAAS,IAAvB;AAAA,OAAzB,CAAP;AACD;;;;;;AAzCU,S,CAGJ,gB,GAAmB,cAAI,MAAJ,CAAW;AACnC,QAAM,cAAI,MAAJ,GAAa,GAAb,CAAiB,CAAjB,EAAoB,GAApB,CAAwB,GAAxB,EAA6B,QAA7B,EAD6B;AAEnC,WAAS,cAAI,MAAJ,GAAa,KAAb,CAAmB,QAAnB,EAA6B,QAA7B,EAAuC,QAAvC,EAAiD,OAAjD,EAA0D,MAA1D,EAAkE,MAAlE,EAA0E,OAA1E,CAAkF,QAAlF,CAF0B;AAGnC,UAAQ,cAAI,MAAJ,GAAa,KAAb,CAAmB,KAAnB,EAA0B,KAA1B,EAAiC,KAAjC,EAAwC,OAAxC,CAAgD,KAAhD,CAH2B;AAInC,WAAS,cAAI,MAAJ,GAAa,KAAb,CAAmB,WAAnB,EAAgC,OAAhC,EAAyC,SAAzC,CAJ0B;AAKnC,iBAAe,cAAI,MAAJ,GAAa,GAAb,CAAiB,CAAjB,EAAoB,GAApB,CAAwB,CAAxB,EAA2B,IAA3B,CAAgC,SAAhC,EAA2C,EAAE,IAAI,IAAN,EAAY,MAAM,cAAI,OAAJ,CAAY,CAAZ,CAAlB,EAA3C,CALoB;AAMnC,SAAO,cAAI,MAAJ,GAAa,GAAb,CAAiB,EAAjB,EAAqB,GAArB,CAAyB,GAAzB,EAA8B,OAA9B,CAAsC,GAAtC,CAN4B;AAOnC,SAAO,cAAI,MAAJ,GAAa,GAAb,CAAiB,EAAjB,EAAqB,GAArB,CAAyB,GAAzB,EAA8B,OAA9B,CAAsC,GAAtC,CAP4B;AAQnC,UAAQ,cAAI,MAAJ,GAAa,GAAb,CAAiB,EAAjB,EAAqB,GAArB,CAAyB,GAAzB,EAA8B,OAA9B,CAAsC,GAAtC;AAR2B,CAAX,EAUzB,YAVyB,CAUZ,SAVY,EAUD,eAVC,EAUgB,OAVhB,EAUyB,OAVzB,EAUkC,QAVlC,EAWzB,IAXyB,CAWpB,eAXoB,EAWH,SAXG,C;kBAyCb,IAAI,SAAJ,E","file":"index.js","sourcesContent":["import Joi from 'joi';\nimport { format } from 'util';\nimport { stringify as queryStringify } from 'querystring';\nimport Promise, { promisify } from 'bluebird';\nimport { post as postRequest } from 'request';\n\nconst postRequestAsync = promisify(postRequest);\n\n// @class VoiceText\nexport class VoiceText {\n  // @see https://cloud.voicetext.jp/webapi/docs/api#section-4\n  // @see https://github.com/hapijs/joi/blob/v8.0.5/API.md\n  static validationSchema = Joi.object({\n    text: Joi.string().min(1).max(200).required(),\n    speaker: Joi.string().valid('hikari', 'haruka', 'takeru', 'santa', 'bear', 'show').default('hikari'),\n    format: Joi.string().valid('wav', 'ogg', 'aac').default('ogg'),\n    emotion: Joi.string().valid('happiness', 'anger', 'sadness'),\n    emotion_level: Joi.number().min(1).max(4).when('emotion', { is: true, then: Joi.default(2) }),\n    pitch: Joi.number().min(50).max(200).default(100),\n    speed: Joi.number().min(50).max(400).default(100),\n    volume: Joi.number().min(50).max(200).default(100),\n  })\n  .optionalKeys('emotion', 'emotion_level', 'pitch', 'speed', 'volume')\n  .with('emotion_level', 'emotion')\n\n  constructor(key = process.env.VOICETEXT_APIKEY) {\n    this.key = key;\n  }\n\n  validate(data = {}) {\n    return Joi.attempt(data, this.constructor.validationSchema);\n  }\n  getUri(key, data) {\n    return format('https://%s:%s@api.voicetext.jp/v1/tts?%s', key, '', queryStringify(this.validate(data)));\n  }\n\n  stream(text = '', data = {}) {\n    return postRequest(this.getUri(this.key, { text, ...data }), { encoding: null });\n  }\n\n  fetch(text = '', data = {}) {\n    try {\n      return postRequestAsync(this.getUri(this.key, { text, ...data }), { encoding: null });\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  fetchBuffer(...args) {\n    return this.fetch(...args).then((response) => response.body);\n  }\n}\n\nexport default new VoiceText;\n"]}